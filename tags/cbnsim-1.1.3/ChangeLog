2012-06-19  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* WorkloadGenerator.cc WorkloadParser.cc and many other files
	workoad file does no more show the topology. Topoogy is passed when simulation is launched (Notice that now, in the brite file, the link 		propagation delay is exppressed in seconds!!!)
2011-09-20  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* WorkloadGenerator.cc and many other files
	Added the possibility to have an infinite number of content with a given prefix, a sort of hard code for the /Orange/ prefixes, use -inf_zipf to  		use this feature
2011-05-31  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* cbnsim/SetMultipathEvent.h,  cbnsim/SetMultipathPacket.h, SetMultipathParser.cc, cbnsim/SetMultipathParser.h, WorkloadGenerator.cc, CBNSimulation.cc:
	Added the command in the workload that enables the multipaths (pay attention it may create loops! Modify the workload manually)
2011-02-18  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* Node.cc cbnsim/Node.h:
	added the possibility to send a single big packet (representing the whole file) in the same amount of time requested by many interest/data
2011-01-08  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* WorkloadGenerator.cc:
	Modified generation of download events:print while creating (before it was: first create events for each node, then print all events in the wl)
        to avoid memory problems
2010-11-16  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* WorkloadParser.cc, Node.cc, cbnsim/Node.h, WorkloadGenerator.cc, brite_parser.cc:
	Added possibility to specify different cache sizes for different nodes 
2010-10-26  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* WorkloadGenerator.cc:
	Added possibility of a "training" period for the cache with lower lambda
2010-06-17  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* cbnsim/DownloadContentEvent.h, cbnsim/SendMessageEvent.h, cbnsim/PublishContentEvent.h, cbnsim/SetPredicateEvent.h:
	Extended max length of the simulation using timestamps of Events as double.
2010-04-26  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* WorkloadGenerator.cc:
	Modified automatic generation of workload, use classes and renormalizing factors

2010-04-26  Massimo GALLO <firstname.lastname@orange-ftgroup.com>
	* WorkloadGenerator.cc:
	Add automatic generation of workloads

2010-02-24  Massimo GALLO <firstname.lastname@orange-ftgroup.com>

	Added donwlaod, record content and timeout events automatic generation of workloads

2009-12-11  Feng LIU <firstname.lastname@orange-ftgroup.com>

	* WorkloadGenerator.cc:
	Add the function of chosing the node mode between p2p and server-client.

2009-10-22  Feng LIU <firstname.lastname@orange-ftgroup.com>

	* Crandom.cc, cbnsim/Crandom.h:
	Add the generator of random number, in which there are perato distribuion and
	other distributions for the further needs.

	* SendMessageWNPF.cc, cbnsim/SendMessageWNPF.h, SendMessageWNP.cc, cbnsim/SendMessageWNP.h:
	Add the option "-pch", which aims to set the change of the content of msg.
	Now there are 3 possible policies, 1, changing the content all the time;
	2, changing the content every fixed interval of time;
	3, changing the content in a average interval of time, the intervals 
	follow the pareto distribution.

2009-09-29  Feng LIU <firstname.lastname@orange-ftgroup.com>

	* dist/:
	add three string value related files and separate them from the original
	ones according to the distribution. So now we have
	attr_names.unif.dist  attr_names.zipf.dist
	constr_names.unif.dist  constr_names.zipf.dist
	string_values.unif.dist  string.values.zipf.dist

	* WorkloadGenerator.cc, cbnsim/WorkloadGenerator.h:
	add three interfaces to control the distribution of generated workload.

2009-09-28  Feng LIU <firstname.lastname@orange-ftgroup.com>

	* SendMessageWNP.cc, cbnsim/SendMessageWNP.h, SendMessageWNPF.cc, cbnsim/SendMessageWNPF.h:
	add the options of changing the time interval of sending the msgs,
	now we have fixed time interval event and poisson event.

	* SetPredicateWNP.cc, cbnsim/SetPredicateWNP.h, SetPredicateWNPF.cc, cbnsim/SetPredicateWNPF.h:
	add the options of changing the time interval of sending the predicates,
	now ze have fixed time interval event and poisson event.



2005-03-04  Antonio Carzaniga  <firstname.lastname@unisi.ch>

	* configure.ac: version 1.1.2

	* cbnsim/Node.h: included <vector>, which was erroneously left out.

2004-12-13  Antonio Carzaniga  <firstname.lastname@unisi.ch>

	* NodeFailWNPF.cc, SendMessageWNPF.cc, SetPredicateWNPF.cc:
	added <cmath>, now compiles with gcc 3.4.2

	* configure.ac: version 1.1.1.

2004-12-13  Antonio Carzaniga  <firstname.lastname@unisi.ch>

	* NodeFailWNPF.cc, SendMessageWNPF.cc, SetPredicateWNPF.cc:
	added <cmath>, now compiles with gcc 3.4.2

	* configure.ac: version 1.1.1.

2004-08-27  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* cbnsim/Node.h, test/test_CBNSimulation.cc:
	made Node::has_failed() and Node::count_power() const functions and
	updated the sample code in test_CBNSimulation to conform to the new
	interface.

2004-06-16  Cyrus P. Hall  <hallcp@siena.cs.colorado.edu>

	* DataCollector.cc, cbnsim/DeliveryOracle.h, cbnsim/Node.h:
	argh

2004-06-12  Cyrus P. Hall  <hallcp@siena.cs.colorado.edu>

	* DeliveryOracle.cc:

	fixups for false positives

2004-06-11  Cyrus P. Hall  <hallcp@siena.cs.colorado.edu>

	* DataCollector.cc, DeliveryOracle.cc, Driver.cc, Node.cc, cbnsim/DeliveryOracle.h, cbnsim/Node.h:

	New DeliveryOracle!  vastly imporoved - redone from scratch.  Needs to be a little more configurable on the fly.

2004-06-10  Cyrus P. Hall  <hallcp@siena.cs.colorado.edu>

	* DeliveryOracle.cc, Node.cc, cbnsim/Node.h:

	Power stuff

2004-04-19  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* DataCollector.cc, Driver.cc, Node.cc, NodeFailWNP.cc, SendMessageWNP.cc, SetPredicateWNP.cc, cbnsim.cc, cbnsim/DataCollector.h, cbnsim/Driver.h, cbnsim/KillerProcess.h, cbnsim/Node.h, cbnsim/NodeFailPacket.h, cbnsim/NodeFailWNP.h, cbnsim/NodeRecoverPacket.h, cbnsim/Packet.h, cbnsim/SendMessagePacket.h, cbnsim/SendMessageWNP.h, cbnsim/SetPredicatePacket.h, cbnsim/SetPredicateWNP.h, configure.ac, test/test_CBNSimulation.cc:
	updated to conform to ssim-1.5.0 interface.

2004-04-19  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* DataCollector.cc, Driver.cc, Node.cc, NodeFailWNP.cc, SendMessageWNP.cc, SetPredicateWNP.cc, cbnsim.cc, cbnsim/DataCollector.h, cbnsim/Driver.h, cbnsim/KillerProcess.h, cbnsim/Node.h, cbnsim/NodeFailPacket.h, cbnsim/NodeFailWNP.h, cbnsim/NodeRecoverPacket.h, cbnsim/Packet.h, cbnsim/SendMessagePacket.h, cbnsim/SendMessageWNP.h, cbnsim/SetPredicatePacket.h, cbnsim/SetPredicateWNP.h, configure.ac, test/test_CBNSimulation.cc:
	updated to conform to ssim-1.5.0 interface.

2004-03-19  Antonio Carzaniga  <carzanig@cs.colorado.edu>

	* cbnsim.spec:
	fixed configure --prefix=/usr parameter.  This works (and is correct)
	because we use a DESTDIR install.

2004-03-07  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* cbnsim/DeliveryOracle.h:
	removed close_message() method that is no longer used.

	* CBNSimulation.cc, DataCollector.cc, Node.cc, cbnsim/DataCollector.h, cbnsim/Node.h, test/test_CBNSimulation.cc:
	few tweaks to help with CBCBSIM.

2004-03-06  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* CBNSimulation.cc, Node.cc, SendMessageWNPF.cc, SetPredicateWNPF.cc, cbnsim/CBNSimulation.h, test/Makefile.am, test/test_CBNSimulation.cc:
	few tweaks to help with CBCBSIM.

2004-03-04  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* test/Makefile.am:
	changed test workload generation to use paths relative to the source
	and build directories since this is executed before install.

	* cbnsim.spec:
	added RPMBUILD_CONFIGURE_FLAGS variable to call to configure.

	* cbnwlgen.cc:
	switched catch block in main function to use a reference.

	* cbnsim/CBNSimulation.h:
	added a accessor method time_unit() which returns the simulation time
	unit dictated by the workload.

2004-03-02  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* test/Makefile.am, test/test_CBNSimulation.cc, test/test_CBNSimulation.wl:
	changed test setup so that test_CBNSimulation.wl is created from the
	current version of the cbnwlgen executable.

	* cbnsim-version.in, configure.ac:
	added cbnsim-version to the list of output files.

	* SendMessageWNPF.cc, SetPredicateWNPF.cc:
	updated usage message to have units.

	* Makefile.am: added cbnsim-version as a bin_SCRIPT.

	* test/test_CBNSimulation.cc:
	removed call to DeliveryOracle::close_message.

2004-02-06  Antonio Carzaniga  <carzanig@cs.colorado.edu>

	* CBNSimulation.cc, WorkloadGenerator.cc: *** empty log message ***

2004-02-04  hallcp  <hallcp@siena.cs.colorado.edu>

	* Node.cc, cbnsim/Node.h, cbnsim/SetPredicatePacket.h:

	now passes a thrid argument to set_predicate, bool null_predicate, which is true if the predicate is null.  This is needed to simulate unsubscriptions.

	* SetPredicateWNP.cc:

	Bug fix - rate is now set correctly for set_predicate

2004-02-03  hallcp  <hallcp@siena.cs.colorado.edu>

	* Node.cc, SetPredicateParser.cc, SetPredicateWNP.cc, SetPredicateWNPF.cc, cbnsim/Node.h, cbnsim/SetPredicateEvent.h, cbnsim/SetPredicatePacket.h, cbnsim/SetPredicateWNP.h, cbnsim/SetPredicateWNPF.h, Driver.cc:

	Now passes a msg_rate variable to set_preicate.  Intigrated fully with wlgen.

2004-02-02  hallcp  <hallcp@siena.cs.colorado.edu>

	* COPYING, Driver.cc, INSTALL, Makefile.am, Node.cc, NodeFailWNP.cc, NodeFailWNPF.cc, NodeRecoverParser.cc, WorkloadParser.cc, cbnsim.cc, cbnsim/Node.h, cbnsim/NodeFailEvent.h, cbnsim/NodeFailPacket.h, cbnsim/NodeFailWNP.h, cbnsim/NodeFailWNPF.h, cbnsim/NodeRecoverEvent.h, cbnsim/NodeRecoverPacket.h, cbnsim/NodeRecoverParser.h:
	Major update - added the node_recover event, cleaned up node_fail and made it use node_recover, removed COPYING and INSTALL which bootsrap creates.

2004-01-29  hallcp  <hallcp@siena.cs.colorado.edu>

	* DataCollector.cc, cbnsim/DeliveryOracle.h, cbnsim/Node.h:

	Nodes now initialize thier counters in init() - this fixes the output
	from DataCollector at time 0.

2004-01-28  hallcp  <hallcp@siena.cs.colorado.edu>

	* INSTALL, cbnsim/DeliveryOracle.h:

	Didn't touch COPYING or INSTALL, but change the calc of flase_negative_percent
	to be what I believe is now correct.

2004-01-28  Antonio Carzaniga  <carzanig@cs.colorado.edu>

	* Makefile.in: removed Makefile.in (which I forgot to remove before)

	* ChangeLog, INSTALL, Makefile.am, aclocal.m4, bootstrap, cbnsim.spec, cbnsim/Node.h, config.guess, config.sub, configure, configure.ac, depcomp, doc/Makefile.am, doc/Makefile.in, doc/doxygen.conf.in, install-sh, ltmain.sh, missing, mkinstalldirs, test/Makefile.in:
	removed config files; added bootstrap script; fixed DESTDIR build and
	rpm/doc build process.

2004-01-28  hallcp  <hallcp@siena.cs.colorado.edu>

	* SendMessageWNP.cc, SendMessageWNPF.cc, SetPredicateWNP.cc, SetPredicateWNPF.cc, WorkloadGenerator.cc, cbnsim/SendMessageWNP.h, cbnsim/SendMessageWNPF.h, cbnsim/WorkloadNodeProcessFactory.h:

	Added the ability to hold publication messages to one value through the entire simulation, allowing for more stable traffic flow.

2004-01-27  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* Makefile.in: *** empty log message ***

2004-01-27  Antonio Carzaniga  <carzanig@cs.colorado.edu>

	* cbnsim/DeliveryOracle.h, DeliveryOracle.cc:
	simplified oracle: removed message map; we don't use per-message
	statistics in any way, so it doesn't make sense to maintain
	per-message counters.  What we do instead is to directly
	increment/decrement the global counters whenever we log false
	positives/negatives.  By doing this, we also get rid of
	close_message().

2004-01-26  Antonio Carzaniga  <carzanig@cs.colorado.edu>

	* Makefile.am:
	swapped brite_parser.yy and brite_lexer.ll in libcbnsim_la_SOURCES to
	solve a dependency problem between brite_lexer.cc and brite_parser.h.

2004-01-26  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* Node.cc, cbnsim/Node.h: *** empty log message ***

2004-01-23  hallcp  <hallcp@siena.cs.colorado.edu>

	* Node.cc:

	Fix for node.cc: broadcast_packet no longer calls issue_packet, but instead
	the per interface lookups itself.  Since each call to issue_packet was
	incrementing the packet counts, counts were much higher than they should be.

2004-01-23  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* cbnsim/DeliveryOracle.h, test/test_CBNSimulation.cc:
	updated some documentation.

2004-01-22  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* Driver.cc, Makefile.am, Makefile.in, Node.cc, brite_parser.yy, cbnsim.cc, cbnsim/NodeFailPacket.h, cbnsim/SendMessagePacket.h, cbnsim/SetPredicatePacket.h, test/test_CBNSimulation.cc:
	changed the way Driver invoked Node::node_fail, Node::send_message,
	and Node::set_predicate so that it now uses a SSim message which is
	handled transparently in Node::process_event. This means that when
	these callback methods are invoked, the Node instance is the
	Sim::this_process() which should simplify the interactions with the
	simulation engine in the Node code.

2004-01-20  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* CBNSimulation.cc, DeliveryOracle.cc, Driver.cc, Makefile.in, Node.cc, aclocal.m4, cbnsim/CBNSimulation.h, cbnsim/Node.h, cbnsim/logging.h, configure, configure.ac, doc/Makefile.in, test/test_CBNSimulation.cc:
	added default lag argument to Node::issue_packet and
	Node::broadcast_packet; added a few accessor functions for data stored
	in Node.

	added handling for --enable-debugs and --enable-assertions in the
	configure script.

2004-01-19  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* doc/cbnwlgen.html, doc/cbnwlstat.html: initial version

2004-01-13  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* Node.cc, cbnsim/Node.h, test/test_CBNSimulation.cc:
	added the Node::id attribute; put methods of Node in alphabetical
	order and added documentation to a few methods that were missing.

2004-01-11  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* Makefile.in, configure, test/test_CBNSimulation.cc:
	updated test to conform to new NodeFactory interface.

2004-01-11  hallcp  <hallcp@siena.cs.colorado.edu>

	* CBNSimulation.cc, aclocal.m4, cbnsim/CBNSimulation.h, cbnsim/NodeFactory.h:

	Update to the NodeFactory interface.  The ID of the node being instanciated is now passed to newNode(...)

2004-01-10  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* Makefile.in, configure, configure.ac, doc/Makefile.in:
	removed the AC_DEFINE calls that are not used; added consistent
	messaging for the --with-* functions.

2004-01-09  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* Node.cc:
	changed boadcast_packet to use the interface ids instead
	of the process ids, preventing a map lookup.

2004-01-09  hallcp  <hallcp@siena.cs.colorado.edu>

	* Node.cc, cbnsim/Node.h:

	Broadcast function for nodes

2004-01-09  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* ChangeLog: *** empty log message ***

	* DataCollector.cc, DeliveryOracle.cc, Driver.cc, cbnsim/DeliveryOracle.h, cbnsim/Node.h, cbnsim/types.h, test/test_CBNSimulation.cc, test/test_CBNSimulation.wl:
	integrated DeliveryOracle with Driver and DataCollector; changed
	the interface of Node slightly to accommodate the DeliveryOracle.

	* Makefile.in: *** empty log message ***

	* doc/Makefile.in: Generated from new doc/Makefile.am

	* WorkloadParser.cc, cbnwlstat.cc:
	changed WorkloadParser so that it eats any event lines that it does
	not have a parser registered for; removed the NodeFailParser from the
	parsers in cbnwlstat since the node_fail event does not play into the
	statistics.

2004-01-08  Antonio Carzaniga  <carzanig@cs.colorado.edu>

	* doc/Makefile.am: made 'doc' part of the default (all) target

2004-01-08  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* cbnsim/DeliveryOracle.h, cbnsim/NodeFailParser.h, cbnsim/NodeFailWNP.h, cbnsim/SendMessageParser.h, cbnsim/SendMessageWNP.h, cbnsim/SetPredicateParser.h, cbnsim/SetPredicateWNP.h, cbnsim/WorkloadGenerator.h, cbnsim/argument_exception.h, cbnsim/io_exception.h:
	Added class-level documentation to the classes that were missing it.

	* CBNSimulation.cc, DataCollector.cc, DeliveryOracle.cc, Driver.cc, Makefile.am, Makefile.in, MatchHandler.cc, Node.cc, WorkloadParser.cc, cbnsim.cc, cbnsim/CBNSimulation.h, cbnsim/DataCollector.h, cbnsim/DeliveryOracle.h, cbnsim/Driver.h, cbnsim/MatchHandler.h, cbnsim/Node.h, cbnsim/Packet.h, cbnsim/WorkloadParser.h, cbnsim/argument_exception.h, cbnsim/io_exception.h, cbnsim/logging.h, cbnsim/parse_exception.h, cbnsim/types.h, cbnwlgen.cc, cbnwlstat.cc, configure, configure.ac, doc/Makefile.am, doc/Makefile.in, doc/maindoc.h, logging.cc, test/Makefile.am, test/Makefile.in, test/test_CBNSimulation.cc, test/test_CBNSimulation.wl:
	added data collection capabilities and reorganized Node;
	added more details to test/test_CBNSimulation.cc.

2004-01-08  Antonio Carzaniga  <carzanig@cs.colorado.edu>

	* Node.cc, Driver.cc: added missing <cassert>

2004-01-07  rutherfo  <rutherfo@siena.cs.colorado.edu>

	* ChangeLog: *** empty log message ***

	* AUTHORS, CBNSimulation.cc, COPYING, ChangeLog, DeliveryOracle.cc, Driver.cc, INSTALL, Makefile.am, Makefile.in, MatchHandler.cc, NEWS, Node.cc, NodeFailParser.cc, NodeFailWNP.cc, NodeFailWNPF.cc, README, SendMessageParser.cc, SendMessageWNP.cc, SendMessageWNPF.cc, SetPredicateParser.cc, SetPredicateWNP.cc, SetPredicateWNPF.cc, WorkloadGenerator.cc, WorkloadNodeProcess.cc, WorkloadParser.cc, aclocal.m4, brite_lexer.ll, brite_parser.yy, cbnsim.cc, cbnsim.spec, cbnwlgen.cc, cbnwlstat.cc, config.guess, config.sub, configure, configure.ac, depcomp, install-sh, logging.cc, ltmain.sh, missing, mkinstalldirs, cbnsim/CBNSimulation.h, cbnsim/DeliveryOracle.h, cbnsim/Driver.h, cbnsim/KillerProcess.h, cbnsim/MatchHandler.h, cbnsim/Node.h, cbnsim/NodeEvent.h, cbnsim/NodeFactory.h, cbnsim/NodeFailEvent.h, cbnsim/NodeFailParser.h, cbnsim/NodeFailWNP.h, cbnsim/NodeFailWNPF.h, cbnsim/Packet.h, cbnsim/SendMessageEvent.h, cbnsim/SendMessageParser.h, cbnsim/SendMessageWNP.h, cbnsim/SendMessageWNPF.h, cbnsim/SetPredicateEvent.h, cbnsim/SetPredicateParser.h, cbnsim/SetPredicateWNP.h, cbnsim/SetPredicateWNPF.h, cbnsim/WorkloadEvent.h, cbnsim/WorkloadEventParser.h, cbnsim/WorkloadGenerator.h, cbnsim/WorkloadNodeProcess.h, cbnsim/WorkloadNodeProcessFactory.h, cbnsim/WorkloadParser.h, cbnsim/argument_exception.h, cbnsim/io_exception.h, cbnsim/logging.h, cbnsim/parse_exception.h, cbnsim/types.h, dist/attr_names.dist, dist/bool_operators.dist, dist/bool_values.dist, dist/constr_names.dist, dist/double_operators.dist, dist/double_values.dist, dist/int_operators.dist, dist/int_values.dist, dist/string_operators.dist, dist/string_values.dist, dist/types.dist, doc/Makefile.am, doc/Makefile.in, doc/cbnsim.css, doc/doxygen.conf.in, doc/fdl.txt, doc/footer.html, doc/header.html.in, doc/maindoc.h, test/Makefile.am, test/Makefile.in, test/test_CBNSimulation.cc, topo/0005.brite, topo/0010.brite, topo/0025.brite, topo/0050.brite, topo/0100.brite, topo/0200.brite, topo/0300.brite, topo/0400.brite, topo/0600.brite, topo/0800.brite, topo/1600.brite, topo/3200.brite:
	bootstrap

